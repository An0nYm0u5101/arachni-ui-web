<%= simple_form_for( @profile ) do |f| %>
    <%= f.error_notification %>

    <% if f.error_notification %>
        <div class="alert alert-error fade in">
            <ul>
            <%  @profile.errors.each do |attribute| %>
                    <% if attribute != :plugins %>
                    <li><%= attribute.to_s.humanize %> <%= f.error attribute %></li>
                    <% else  %>
                        <li><%= attribute.to_s.humanize %> <pre class="alert-error"><%= f.error attribute %></pre></li>
                    <% end  %>
            <% end %>
            </ul>
        </div>
    <% end %>

    <header class="jumbotron subhead" id="overview">
        <%= f.input :name %>

        <div class="span12">
        </div>

        <%= f.input :description, input_html: { rows: 5, cols: 100 } %>
    </header>

    <section id="spider">
        <fieldset>
            <legend id="spider-h">
                Spider
                <small>How the scanner will crawl the web application</small>
            </legend>
            <div class="row">
                <div class="span6">
                    <%= f.input :redundant, input_html: {
                            value: @profile.restrict_paths.map { |k, v| "#{k}:#{v}" }.join( "\n" )
                        }, hint: messages_for( :redundant ) %>

                    <p class="alert alert-info">
                        Rules take the format of <em>pattern:times</em>,
                        input each rule in its own line.
                    </p>
                </div>
                <div class="span6">
                    <%= f.input :auto_redundant, hint: messages_for( :auto_redundant ) %>
                </div>
                <div class="span6">
                    <%= f.input :depth_limit, hint: messages_for( :depth_limit )%>
                </div>
                <div class="span6">
                    <%= f.input :link_count_limit, hint: messages_for( :link_count_limit ) %>
                </div>
                <div class="span6">
                    <%= f.input :redirect_limit, hint: messages_for( :redirect_limit ) %>
                </div>
                <div class="span6">
                    <%= f.input :follow_subdomains, hint: messages_for( :follow_subdomains ) %>
                </div>
                <div class="span6">
                    <%= f.input :exclude_binaries, hint: messages_for( :exclude_binaries ) %>
                </div>

                <div class="span12">
                </div>

                <div class="span6">
                    <%= f.input :exclude, input_html: { value: @profile.exclude.join( "\n" ) },
                                hint: messages_for( :exclude ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :include, input_html: { value: @profile.exclude.join( "\n" ) },
                                hint: messages_for( :include ) %>
                    <p class="alert alert-info">Input each rule in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :restrict_paths, input_html: { value: @profile.restrict_paths.join( "\n" ) },
                                hint: messages_for( :restrict_paths ) %>
                    <p class="alert alert-info">Input each path in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :extend_paths, input_html: { value: @profile.restrict_paths.join( "\n" ) },
                                hint: messages_for( :extend_paths ) %>
                    <p class="alert alert-info">Input each path in its own line.</p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="http">
        <fieldset>
            <legend id="http-h">
                HTTP
                <small>How the scanner will communicate with the web application</small>
            </legend>

            <div class="row">
                <div class="span6">
                        <%= f.input :http_req_limit, hint: messages_for( :http_req_limit ) %>
                </div>
                <div class="span6">
                        <%= f.input :proxy_host, hint: messages_for( :proxy_host ) %>
                </div>
                <div class="span6">
                        <%= f.input :proxy_port, hint: messages_for( :proxy_port ) %>
                </div>
                <div class="span6">
                        <%= f.input :proxy_username, hint: messages_for( :proxy_username ) %>
                </div>
                <div class="span6">
                        <%= f.input :proxy_password, as: :string, hint: messages_for( :proxy_password ) %>
                </div>
                <div class="span6">
                        <%= f.input :proxy_type, hint: messages_for( :proxy_type ) %>
                </div>
                <div class="span6">
                        <%= f.input :user_agent, as: :string,  hint: messages_for( :user_agent ) %>
                </div>
                <div class="span12">
                    <%= f.input :http_timeout, hint: messages_for( :http_timeout ) %>
                </div>
                <div class="span6">
                    <%= f.input :cookies, input_html: {
                            value: @profile.cookies.map { |k, v| "#{k}=#{v}" }.join( "\n" )
                        },
                        hint: messages_for( :cookies ) %>
                    <p class="alert alert-info">
                        Cookies take the format of <em>name=value</em>,
                        input each cookie in its own line.
                    </p>
                </div>
                <div class="span6">
                    <%= f.input :custom_headers, input_html: {
                            value: @profile.custom_headers.map { |k, v| "#{k}=#{v}" }.join( "\n" )
                        },
                        hint: messages_for( :custom_headers ) %>
                    <p class="alert alert-info">
                        Headers take the format of <em>name=value</em>,
                        input each header in its own line.
                    </p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="auditor">
        <fieldset>
            <legend id="auditor-h">
                Auditor
                <small>How the scanner will audit the web application</small>
            </legend>

            <div class="row">
                <div class="span6">
                        <%= f.input :audit_forms, hint: messages_for( :audit_forms ) %>
                </div>
                <div class="span6">
                        <%= f.input :audit_cookies, hint: messages_for( :audit_cookies ) %>
                </div>
                <div class="span6">
                        <%= f.input :audit_headers, hint: messages_for( :audit_headers ) %>
                </div>
                <div class="span6">
                        <%= f.input :audit_links, hint: messages_for( :audit_links ) %>
                </div>
                <div class="span6">
                        <%= f.input :fuzz_methods, hint: messages_for( :fuzz_methods ) %>
                </div>

                <div class="span12">
                </div>

                <div class="span6">
                    <%= f.input :audit_cookies_extensively, hint: messages_for( :audit_cookies_extensively ) %>
                </div>

                <div class="span12">
                </div>

                <div class="span6">
                    <%= f.input :exclude_vectors, input_html: { value: @profile.exclude_vectors.join( "\n" ) },
                                hint: messages_for( :exclude_vectors ) %>
                    <p class="alert alert-info">Input each parameter/input/vector name in its own line.</p>
                </div>
                <div class="span6">
                    <%= f.input :exclude_cookies, input_html: { value: @profile.exclude_cookies.join( "\n" ) },
                                hint: messages_for( :exclude_cookies ) %>
                    <p class="alert alert-info">Input each cookie's name in its own line.</p>
                </div>
            </div>
        </fieldset>
    </section>

    <section id="modules">
        <fieldset>
            <legend id="modules-h">
                Modules
                <small>The security checks to be run again the web application</small>
            </legend>

            <h3>
                Audit (Active)
                <small>These checks will actively engage the web application via its inputs (links, forms, etc.)</small>
            </h3>
            <% audit = modules.select { |n, i| i[:path].include?( '/modules/audit' ) } %>
            <% if audit.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: audit,
                                   form:       f,
                                   selected:   @profile.modules,
                                   input:      :modules,
                                   class_name: 'span6'
                           } %>
            <% else %>
                <p class="alert alert-info">No audit modules are available.</p>
            <% end %>


            <h3>
                Recon (Passive)
                <small>These checks will passively collect data</small>
            </h3>
            <% recon = modules.select { |n, i| i[:path].include?( '/modules/recon' ) } %>
            <% if recon.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: recon,
                                   form:       f,
                                   selected:   @profile.modules,
                                   input:      :modules,
                                   class_name: 'span6'
                           } %>
            <% end %>

        </fieldset>

    </section>

    <section id="plugins">
        <fieldset>
            <legend id="plugins-h">
                Plugins
                <small>Assisting components to be enabled during the process</small>
            </legend>

            <% if errors = @profile.errors.messages[:plugins] || [] %>
                <% errors.each do |message| %>
                    <pre class="alert alert-error"><%= message %></pre>
                <%end%>
            <%end%>

            <% if plugins.any? %>
                <%= render partial: '/shared/components_twin_accordion_form',
                           locals: {
                                   components: plugins,
                                   form:       f,
                                   selected:   @profile.plugins,
                                   input:      :plugins,
                                   class_name: 'span6'
                           } %>
            <% end %>
        </fieldset>
    </section>

    <section id="login">
        <fieldset>
            <legend id="login-h">
                Login checks
                <small>How the scanner will determine its session's validity</small>
            </legend>

            <div class="row">
                <div class="span6">
                    <%= f.input :login_check_url, as: :string, hint: messages_for( :login_check_url ) %>
                </div>
                <div class="span6">
                    <%= f.input :login_check_pattern, as: :string, hint: messages_for( :login_check_pattern ) %>
                </div>
            </div>
        </fieldset>
    </section>


    <div class="form-actions">
        <%= f.button :submit %>
    </div>
<% end %>
