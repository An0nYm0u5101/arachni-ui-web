<div class="row-fluid hidden-phone collapse" id="charts">
    <div class="span12" id="chart-issues-container">
        <div id="chart-issues" class="clear">
        </div>
    </div>

    <div class="span12" id="pies">
        <div class="pie-chart" id="chart-severities">
        </div>

        <div class="pie-chart" id="chart-elements">
        </div>
    </div>
</div>

<script type="text/javascript">
    <% graph_data = issues_to_graph_data( issues ) %>

    function pie( holder, title, data, colors ) {

        container = $( '#' + holder );
        container.empty();

        $.jqplot( holder,
                [ data ],
                {
                    seriesColors: colors,
                    title: title,
                    seriesDefaults: {
                        renderer: $.jqplot.PieRenderer,
                        rendererOptions: {
                            showDataLabels: true,
                            dataLabels: 'value'
                        }
                    },
                    legend: {
                        show: true
                    },
                    grid: {
                        drawBorder: false,
                        drawGridlines: false,
                        shadow: false
                    }
                }
        );
    }


    function drawBars(){
        if( !$('#chart-issues' ).is(':visible') ) return;

        $('#chart-issues').empty();
        $('#chart-issues').attr( "width",( $('#canvas-container').width() ) );
        $('#chart-issues').attr( "height",( $('#canvas-container').height() ) );


        $.jqplot( 'chart-issues',
                [
                    <%= graph_data[:issues].values.to_json.html_safe %>
                ],
                {
                    seriesColors: [ "#4572A7" ],
                    title: '<%= issues.size %> issues of <%= graph_data[:issues].keys.size %> different types',
                    highlighter: {
                        lineWidthAdjust: 2.5,
                        sizeAdjust: 5,
                        showTooltip: true,
                        tooltipLocation: 'nw',
                        fadeTooltip: true,
                        tooltipFadeSpeed: "fast",
                        tooltipOffset: 2,
                        tooltipAxes: 'both',
                        tooltipSeparator: ', ',
                        useAxesFormatters: true,
                        tooltipFormatString: '%.5P'
                    },
                    stackSeries: true,
                    seriesDefaults:{
                        renderer:$.jqplot.BarRenderer,
                        rendererOptions: {
                            barPadding: 50,
                            barDirection: 'vertical',
                            barWidth: null,
                            highlightMouseMove: true,
                            smooth: true,
                            animation: {
                                show: false
                            }
                        },
                        pointLabels: {show: true}
                    },
                    legend: {
                        show: false,
                    },
                    axesDefaults: {
                        rendererOptions: {
                            drawBaseline: false
                        }
                    },
                    axes: {
                        xaxis: {
                            renderer: $.jqplot.CategoryAxisRenderer,
                            ticks: <%= graph_data[:issues].keys.map { |k| k.gsub( ' ', "\n" ) }.to_json.html_safe %>,
                            drawMajorGridlines: false,
                            tickOptions: {
                                mark: 'outside',
                                showMark: true,
                                showGridline: true,
                                markSize: 4,
                                show: true,
                                showLabel: true,
                                formatString: ''
                            }
                        }
                    },
                    grid: {
                        shadow: true,
                        shadowAngle: 45,
                        shadowOffset: 1.5,
                        shadowWidth: 3,
                        shadowDepth: 3,
                        shadowAlpha: 0.07,
                        drawBorder: false
                    },
                    series: [
                        {
                            label: ' '
                        }
                    ]
                });
    }

    function drawPies(){
        pie( "chart-severities", "Severity levels",
                <%= graph_data[:severities].map { |k, v| [k, v] }.to_json.html_safe %>,
                [ '#BD2C00', '#DB843D', '#EDDF3C', '#89A54E' ]
        );

        pie( "chart-elements", "Issues by element",
                <%= graph_data[:elements].map { |k, v| [k.capitalize, v] }.to_json.html_safe %>
        );
    }

    function drawCharts(){
        if( !$( '#charts' ).hasClass( 'in' ) ) return;

        drawBars();
        drawPies();
    }

    function toggleCharts(){
        container = $( '#charts' );

        container.collapse( 'toggle' );
        if( !container.hasClass( 'in' ) ) container.empty();

        drawCharts();
    }

    updatePage();

    <% if issues.any? %>
    drawCharts();
    $(window).resize(function() {
        drawCharts( );
    });

    <% end %>
</script>
